server:
  port: 8000

spring:
  application:
    name: cloud-gate-way
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
#        - id: user-service
#          uri: lb://CLOUD-USER-SERVICE
#          predicates:
#            - Path=/user-service/**
        - id: user-service
          uri: lb://CLOUD-USER-SERVICE
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://CLOUD-USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://CLOUD-USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

        - id: user-service
          uri: lb://CLOUD-USER-SERVICE
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: catalog-service
          uri: lb://CLOUD-CATALOG-SERVICE
          predicates:
            - Path=/catalog-service/**

        - id: order-service
          uri: lb://CLOUD-ORDER-SERVICE
          predicates:
            - Path=/order-service/**

#        예제-------------------------------------------------------------
        - id: first-service
          uri: lb://CLOUD-EX-FIRST # Eureka 사용해서 매핑 시키기
#          uri: http://localhost:8081/ # port 번호를 사용해서 매핑 시키기
          predicates:
            - Path=/first-service/**
          # yml에서 설정
          filters:
#            - AddRequestHeader=first-request, first-request-header2
#            - AddResponseHeader=first-response, first-response-header2
            - CustomFilter
        - id: second-service
          uri: lb://CLOUD-EX-SECOND
#          uri: http://localhost:8082/
          predicates:
            - Path=/second-service/**
          filters:
#            - AddRequestHeader=second-request, second-request-header2
#            - AddResponseHeader=second-response, second-response-header2
            - name: CustomFilter
#              실행 순서가 없는 경우 순차적으로 실행된다.
            - name: LoggingFilter
              args:
                baseMessage: Hi there! Logging Filter
                preLogger: true
                postLogger: true

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

#token:
#  secret: jwt_token_secret_key_test

management:
  endpoints:
    web:
      exposure:
        include: ["refresh", "health", "beans", "httpexchange"]