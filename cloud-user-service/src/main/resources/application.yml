server:
  port: 0 # random port number
  forward-headers-strategy: framework

spring:
  application:
    # Eureka Server에서 해당 이름이 Application의 이름으로 들어간다.
    name: cloud-user-service

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true

  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password:
    driver-class-name: org.h2.Driver

  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.orm.jdbc.bind: trace

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true # Eureka Server에 등록하겠다는 설정
    # The server will register itself with the Eureka Server.
    fetch-registry: true # Eureka Server에서 주기적으로 최신 서버 정보를 받겠다는 설정
    # The server will periodically fetch information about registered instances (servers) from the Eureka Server
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka


greeting:
  message: Welcome to the Simple E-commerce.


token:
  expiration_time: 86400000
  secret: jwt_token_secret_key_test